{"ast":null,"code":"import * as api from \"../api\";\nimport { CREATE_LEADERBOARD, ADD_PLAYER_RESULT, FETCH_LEADERBOARD, UPDATE_QUESTION_LEADERBOARD, UPDATE_CURRENT_LEADERBOARD } from \"../components/constants/actionTypess\";\nexport const createLeaderboard = leaderboardData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createLeaderboard(leaderboardData);\n    dispatch({\n      type: CREATE_LEADERBOARD,\n      payload: data\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getLeaderboard = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchLeaderboard(id);\n    dispatch({\n      type: FETCH_LEADERBOARD,\n      payload: {\n        leaderboard: data\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const addPlayerResult = (playerResult, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.addPlayerResult(playerResult, id);\n    dispatch({\n      type: ADD_PLAYER_RESULT,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateQuestionLeaderboard = (questionResult, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateQuestionLeaderboard(questionResult, id);\n    dispatch({\n      type: UPDATE_QUESTION_LEADERBOARD,\n      payload: data\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateCurrentLeaderboard = (result, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateCurrentLeaderboard(result, id);\n    dispatch({\n      type: UPDATE_CURRENT_LEADERBOARD,\n      payload: data\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","CREATE_LEADERBOARD","ADD_PLAYER_RESULT","FETCH_LEADERBOARD","UPDATE_QUESTION_LEADERBOARD","UPDATE_CURRENT_LEADERBOARD","createLeaderboard","leaderboardData","dispatch","data","type","payload","error","console","log","getLeaderboard","id","fetchLeaderboard","leaderboard","addPlayerResult","playerResult","updateQuestionLeaderboard","questionResult","updateCurrentLeaderboard","result"],"sources":["D:/WORKSPACE/DOAN2/Quiz Battle/client/src/actions/leaderboard.js"],"sourcesContent":["import * as api from \"../api\"\r\nimport {\r\n  CREATE_LEADERBOARD,\r\n  ADD_PLAYER_RESULT,\r\n  FETCH_LEADERBOARD,\r\n  UPDATE_QUESTION_LEADERBOARD,\r\n  UPDATE_CURRENT_LEADERBOARD,\r\n} from \"../components/constants/actionTypess\"\r\n\r\nexport const createLeaderboard = (leaderboardData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createLeaderboard(leaderboardData)\r\n    dispatch({ type: CREATE_LEADERBOARD, payload: data })\r\n    return data\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const getLeaderboard = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchLeaderboard(id)\r\n    dispatch({ type: FETCH_LEADERBOARD, payload: { leaderboard: data } })\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const addPlayerResult = (playerResult, id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addPlayerResult(playerResult, id)\r\n    dispatch({ type: ADD_PLAYER_RESULT, payload: data })\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const updateQuestionLeaderboard =\r\n  (questionResult, id) => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.updateQuestionLeaderboard(questionResult, id)\r\n      dispatch({ type: UPDATE_QUESTION_LEADERBOARD, payload: data })\r\n      return data\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\nexport const updateCurrentLeaderboard = (result, id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateCurrentLeaderboard(result, id)\r\n    dispatch({ type: UPDATE_CURRENT_LEADERBOARD, payload: data })\r\n    return data\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAC7B,SACEC,kBAAkB,EAClBC,iBAAiB,EACjBC,iBAAiB,EACjBC,2BAA2B,EAC3BC,0BAA0B,QACrB,sCAAsC;AAE7C,OAAO,MAAMC,iBAAiB,GAAIC,eAAe,IAAK,MAAOC,QAAQ,IAAK;EACxE,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMT,GAAG,CAACM,iBAAiB,CAACC,eAAe,CAAC;IAC7DC,QAAQ,CAAC;MAAEE,IAAI,EAAET,kBAAkB;MAAEU,OAAO,EAAEF;IAAK,CAAC,CAAC;IACrD,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMG,cAAc,GAAIC,EAAE,IAAK,MAAOR,QAAQ,IAAK;EACxD,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMT,GAAG,CAACiB,gBAAgB,CAACD,EAAE,CAAC;IAC/CR,QAAQ,CAAC;MAAEE,IAAI,EAAEP,iBAAiB;MAAEQ,OAAO,EAAE;QAAEO,WAAW,EAAET;MAAK;IAAE,CAAC,CAAC;EACvE,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMO,eAAe,GAAGA,CAACC,YAAY,EAAEJ,EAAE,KAAK,MAAOR,QAAQ,IAAK;EACvE,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMT,GAAG,CAACmB,eAAe,CAACC,YAAY,EAAEJ,EAAE,CAAC;IAC5DR,QAAQ,CAAC;MAAEE,IAAI,EAAER,iBAAiB;MAAES,OAAO,EAAEF;IAAK,CAAC,CAAC;EACtD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMS,yBAAyB,GACpCA,CAACC,cAAc,EAAEN,EAAE,KAAK,MAAOR,QAAQ,IAAK;EAC1C,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMT,GAAG,CAACqB,yBAAyB,CAACC,cAAc,EAAEN,EAAE,CAAC;IACxER,QAAQ,CAAC;MAAEE,IAAI,EAAEN,2BAA2B;MAAEO,OAAO,EAAEF;IAAK,CAAC,CAAC;IAC9D,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAEH,OAAO,MAAMW,wBAAwB,GAAGA,CAACC,MAAM,EAAER,EAAE,KAAK,MAAOR,QAAQ,IAAK;EAC1E,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMT,GAAG,CAACuB,wBAAwB,CAACC,MAAM,EAAER,EAAE,CAAC;IAC/DR,QAAQ,CAAC;MAAEE,IAAI,EAAEL,0BAA0B;MAAEM,OAAO,EAAEF;IAAK,CAAC,CAAC;IAC7D,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}