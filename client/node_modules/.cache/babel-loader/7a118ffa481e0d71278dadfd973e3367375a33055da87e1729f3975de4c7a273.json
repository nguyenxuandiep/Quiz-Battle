{"ast":null,"code":"var _jsxFileName = \"D:\\\\WORKSPACE\\\\DOAN2\\\\Quiz Battle\\\\client\\\\src\\\\pages\\\\Game\\\\PlayerScreen\\\\PlayerScreen.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addAnswer, getPlayerResult } from \"../../../actions/playerResult\";\nimport { useEffect } from \"react\";\nimport styles from \"./playerScreen.module.scss\";\nimport Answer from \"../Answer/Answer\";\nimport diamond from \"../../../assets/diamond.svg\";\nimport triangle from \"../../../assets/triangle.svg\";\nimport circle from \"../../../assets/circle.svg\";\nimport square from \"../../../assets/square.svg\";\nimport { CircularProgress } from \"@mui/material\";\nimport classNames from \"classnames/bind\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cx = classNames.bind(styles);\nfunction PlayerScreen() {\n  _s();\n  const socket = useSelector(state => state.socket.socket);\n  const dispatch = useDispatch();\n  const {\n    playerResult\n  } = useSelector(state => state.playerResults);\n  const [result, setResult] = useState(playerResult === null || playerResult === void 0 ? void 0 : playerResult.answers[0]);\n  const [isQuestionAnswered, setIsQuestionAnswered] = useState(false);\n  const [isPreviewScreen, setIsPreviewScreen] = useState(false);\n  const [isQuestionScreen, setIsQuestionScreen] = useState(false);\n  const [isResultScreen, setIsResultScreen] = useState(false);\n  const [timer, setTimer] = useState(0);\n  const [answerTime, setAnswerTime] = useState(0);\n  const [questionData, setQuestionData] = useState();\n  const [correctAnswerCount, setCorrectAnswerCount] = useState(1);\n  const [answer, setAnswer] = useState({\n    questionIndex: 0,\n    answers: [],\n    time: 0\n  });\n  useEffect(() => {\n    setTimer(5);\n  }, []);\n  useEffect(() => {\n    socket.on(\"host-start-preview\", () => {\n      setIsPreviewScreen(true);\n      setIsResultScreen(false);\n      startPreviewCountdown(5);\n    });\n    socket.on(\"host-start-question-timer\", (time, question) => {\n      setQuestionData(question.answerList);\n      startQuestionCountdown(time);\n      setAnswer(prevstate => ({\n        ...prevstate,\n        questionIndex: question.questionIndex,\n        answers: [],\n        time: 0\n      }));\n      setCorrectAnswerCount(question.correctAnswersCount);\n    });\n  }, [socket]);\n  const startPreviewCountdown = seconds => {\n    let time = seconds;\n    let interval = setInterval(() => {\n      setTimer(time);\n      if (time === 0) {\n        clearInterval(interval);\n        setIsPreviewScreen(false);\n        setIsQuestionScreen(true);\n      }\n      time--;\n    }, 1000);\n  };\n  const startQuestionCountdown = seconds => {\n    let time = seconds;\n    let answerSeconds = 0;\n    let interval = setInterval(() => {\n      setTimer(time);\n      setAnswerTime(answerSeconds);\n      if (time === 0) {\n        clearInterval(interval);\n        setIsQuestionScreen(false);\n        setIsQuestionAnswered(false);\n        setIsResultScreen(true);\n      }\n      time--;\n      answerSeconds++;\n    }, 1000);\n  };\n  const sendAnswer = async () => {\n    const updatedPlayerResult = await dispatch(addAnswer(answer, playerResult._id));\n    console.log(updatedPlayerResult.answers[updatedPlayerResult.answers.length - 1]);\n    setResult(updatedPlayerResult.answers[updatedPlayerResult.answers.length - 1]);\n    let data = {\n      questionIndex: answer.questionIndex,\n      playerId: updatedPlayerResult.playerId,\n      playerPoints: updatedPlayerResult.answers[answer.questionIndex - 1].points\n    };\n    let score = updatedPlayerResult.score;\n    socket.emit(\"send-answer-to-host\", data, score);\n    dispatch(getPlayerResult(playerResult._id));\n  };\n  const checkAnswer = name => {\n    let answerIndex = answer.answers.findIndex(obj => obj === name);\n    if (answer.answers.includes(name)) {\n      //remove answer\n      setAnswer(prevstate => ({\n        ...prevstate,\n        answers: [...prevstate.answers.slice(0, answerIndex), ...prevstate.answers.slice(answerIndex + 1, prevstate.answers.length)]\n      }));\n    } else {\n      //add answer\n      setAnswer(prevstate => ({\n        ...prevstate,\n        answers: [...prevstate.answers, name]\n      }));\n    }\n    setAnswer(prevstate => ({\n      ...prevstate,\n      time: answerTime\n    }));\n  };\n  useEffect(() => {\n    if ((answer === null || answer === void 0 ? void 0 : answer.answers.length) > 0 && (answer === null || answer === void 0 ? void 0 : answer.answers.length) === correctAnswerCount) {\n      setIsQuestionScreen(false);\n      setIsQuestionAnswered(true);\n      sendAnswer();\n    } else {\n      setIsQuestionAnswered(false);\n    }\n  }, [answer === null || answer === void 0 ? void 0 : answer.answers.length, correctAnswerCount, answer, socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx('page'),\n    children: [isPreviewScreen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx(\"question-preview\"),\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: timer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), isQuestionScreen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx(\"question-preview\"),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx(\"answers-container\"),\n        children: [/*#__PURE__*/_jsxDEV(Answer, {\n          icon: triangle,\n          showText: false,\n          isAnswerClicked: answer.answers.includes(\"a\"),\n          onClick: () => checkAnswer(\"a\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Answer, {\n          icon: diamond,\n          showText: false,\n          isAnswerClicked: answer.answers.includes(\"b\"),\n          onClick: () => checkAnswer(\"b\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), (questionData === null || questionData === void 0 ? void 0 : questionData.length) > 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Answer, {\n            icon: circle,\n            showText: false,\n            isAnswerClicked: answer.answers.includes(\"c\"),\n            onClick: () => checkAnswer(\"c\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Answer, {\n            icon: square,\n            showText: false,\n            isAnswerClicked: answer.answers.includes(\"d\"),\n            onClick: () => checkAnswer(\"d\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), isQuestionAnswered && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx(\"question-preview\"),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wait for a result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), isResultScreen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx(\"question-preview\"),\n      style: {\n        backgroundColor: result.points > 0 ? \"green\" : \"red\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: result.points > 0 ? \"Correct\" : \"Wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Points\", result.points]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayerScreen, \"CY0Ig2AyZkPCSEhOqU0+TLgwXcE=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n_c = PlayerScreen;\nexport default PlayerScreen;\nvar _c;\n$RefreshReg$(_c, \"PlayerScreen\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","addAnswer","getPlayerResult","useEffect","styles","Answer","diamond","triangle","circle","square","CircularProgress","classNames","jsxDEV","_jsxDEV","Fragment","_Fragment","cx","bind","PlayerScreen","_s","socket","state","dispatch","playerResult","playerResults","result","setResult","answers","isQuestionAnswered","setIsQuestionAnswered","isPreviewScreen","setIsPreviewScreen","isQuestionScreen","setIsQuestionScreen","isResultScreen","setIsResultScreen","timer","setTimer","answerTime","setAnswerTime","questionData","setQuestionData","correctAnswerCount","setCorrectAnswerCount","answer","setAnswer","questionIndex","time","on","startPreviewCountdown","question","answerList","startQuestionCountdown","prevstate","correctAnswersCount","seconds","interval","setInterval","clearInterval","answerSeconds","sendAnswer","updatedPlayerResult","_id","console","log","length","data","playerId","playerPoints","points","score","emit","checkAnswer","name","answerIndex","findIndex","obj","includes","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","icon","showText","isAnswerClicked","onClick","style","backgroundColor","_c","$RefreshReg$"],"sources":["D:/WORKSPACE/DOAN2/Quiz Battle/client/src/pages/Game/PlayerScreen/PlayerScreen.js"],"sourcesContent":["import React from \"react\"\r\nimport { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { addAnswer, getPlayerResult } from \"../../../actions/playerResult\"\r\nimport { useEffect } from \"react\"\r\nimport styles from \"./playerScreen.module.scss\"\r\nimport Answer from \"../Answer/Answer\"\r\nimport diamond from \"../../../assets/diamond.svg\"\r\nimport triangle from \"../../../assets/triangle.svg\"\r\nimport circle from \"../../../assets/circle.svg\"\r\nimport square from \"../../../assets/square.svg\"\r\nimport { CircularProgress } from \"@mui/material\"\r\nimport classNames from \"classnames/bind\"\r\n\r\nconst cx = classNames.bind(styles);\r\nfunction PlayerScreen() {\r\n  const socket = useSelector((state) => state.socket.socket)\r\n  const dispatch = useDispatch()\r\n  const { playerResult } = useSelector((state) => state.playerResults)\r\n  const [result, setResult] = useState(playerResult?.answers[0])\r\n\r\n  const [isQuestionAnswered, setIsQuestionAnswered] = useState(false)\r\n  const [isPreviewScreen, setIsPreviewScreen] = useState(false)\r\n  const [isQuestionScreen, setIsQuestionScreen] = useState(false)\r\n  const [isResultScreen, setIsResultScreen] = useState(false)\r\n  const [timer, setTimer] = useState(0)\r\n  const [answerTime, setAnswerTime] = useState(0)\r\n  const [questionData, setQuestionData] = useState()\r\n  const [correctAnswerCount, setCorrectAnswerCount] = useState(1)\r\n\r\n  const [answer, setAnswer] = useState({\r\n    questionIndex: 0,\r\n    answers: [],\r\n    time: 0,\r\n  })\r\n\r\n  useEffect(() => {\r\n    setTimer(5)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    socket.on(\"host-start-preview\", () => {\r\n      setIsPreviewScreen(true)\r\n      setIsResultScreen(false)\r\n      startPreviewCountdown(5)\r\n    })\r\n    socket.on(\"host-start-question-timer\", (time, question) => {\r\n      setQuestionData(question.answerList)\r\n      startQuestionCountdown(time)\r\n      setAnswer((prevstate) => ({\r\n        ...prevstate,\r\n        questionIndex: question.questionIndex,\r\n        answers: [],\r\n        time: 0,\r\n      }))\r\n      setCorrectAnswerCount(question.correctAnswersCount)\r\n    })\r\n  }, [socket])\r\n\r\n  const startPreviewCountdown = (seconds) => {\r\n    let time = seconds\r\n    let interval = setInterval(() => {\r\n      setTimer(time)\r\n      if (time === 0) {\r\n        clearInterval(interval)\r\n        setIsPreviewScreen(false)\r\n        setIsQuestionScreen(true)\r\n      }\r\n      time--\r\n    }, 1000)\r\n  }\r\n\r\n  const startQuestionCountdown = (seconds) => {\r\n    let time = seconds\r\n    let answerSeconds = 0\r\n    let interval = setInterval(() => {\r\n      setTimer(time)\r\n      setAnswerTime(answerSeconds)\r\n      if (time === 0) {\r\n        clearInterval(interval)\r\n        setIsQuestionScreen(false)\r\n        setIsQuestionAnswered(false)\r\n        setIsResultScreen(true)\r\n      }\r\n      time--\r\n      answerSeconds++\r\n    }, 1000)\r\n  }\r\n\r\n  const sendAnswer = async () => {\r\n    const updatedPlayerResult = await dispatch(\r\n      addAnswer(answer, playerResult._id)\r\n    )\r\n    console.log(\r\n      updatedPlayerResult.answers[updatedPlayerResult.answers.length - 1]\r\n    )\r\n    setResult(\r\n      updatedPlayerResult.answers[updatedPlayerResult.answers.length - 1]\r\n    )\r\n    let data = {\r\n      questionIndex: answer.questionIndex,\r\n      playerId: updatedPlayerResult.playerId,\r\n      playerPoints:\r\n        updatedPlayerResult.answers[answer.questionIndex - 1].points,\r\n    }\r\n    let score = updatedPlayerResult.score\r\n    socket.emit(\"send-answer-to-host\", data, score)\r\n    dispatch(getPlayerResult(playerResult._id))\r\n  }\r\n\r\n  const checkAnswer = (name) => {\r\n    let answerIndex = answer.answers.findIndex((obj) => obj === name)\r\n    if (answer.answers.includes(name)) {\r\n      //remove answer\r\n      setAnswer((prevstate) => ({\r\n        ...prevstate,\r\n        answers: [\r\n          ...prevstate.answers.slice(0, answerIndex),\r\n          ...prevstate.answers.slice(answerIndex + 1, prevstate.answers.length),\r\n        ],\r\n      }))\r\n    } else {\r\n      //add answer\r\n      setAnswer((prevstate) => ({\r\n        ...prevstate,\r\n        answers: [...prevstate.answers, name],\r\n      }))\r\n    }\r\n    setAnswer((prevstate) => ({\r\n      ...prevstate,\r\n      time: answerTime,\r\n    }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      answer?.answers.length > 0 &&\r\n      answer?.answers.length === correctAnswerCount\r\n    ) {\r\n      setIsQuestionScreen(false)\r\n      setIsQuestionAnswered(true)\r\n      sendAnswer()\r\n    } else {\r\n      setIsQuestionAnswered(false)\r\n    }\r\n  }, [answer?.answers.length, correctAnswerCount, answer, socket])\r\n\r\n  return (\r\n    <div className={cx('page')}>\r\n      {isPreviewScreen && (\r\n        <div className={cx(\"question-preview\")}>\r\n          <h1>{timer}</h1>\r\n        </div>\r\n      )}\r\n      {isQuestionScreen && (\r\n        <div className={cx(\"question-preview\")}>\r\n          <div className={cx(\"answers-container\")}>\r\n            <Answer\r\n              icon={triangle}\r\n              showText={false}\r\n              isAnswerClicked={answer.answers.includes(\"a\")}\r\n              onClick={() => checkAnswer(\"a\")}\r\n            />\r\n            <Answer\r\n              icon={diamond}\r\n              showText={false}\r\n              isAnswerClicked={answer.answers.includes(\"b\")}\r\n              onClick={() => checkAnswer(\"b\")}\r\n            />\r\n            {questionData?.length > 2 && (\r\n              <>\r\n                <Answer\r\n                  icon={circle}\r\n                  showText={false}\r\n                  isAnswerClicked={answer.answers.includes(\"c\")}\r\n                  onClick={() => checkAnswer(\"c\")}\r\n                />\r\n                <Answer\r\n                  icon={square}\r\n                  showText={false}\r\n                  isAnswerClicked={answer.answers.includes(\"d\")}\r\n                  onClick={() => checkAnswer(\"d\")}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isQuestionAnswered && (\r\n        <div className={cx(\"question-preview\")}>\r\n          <h1>Wait for a result</h1>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      {isResultScreen && (\r\n        <div\r\n          className={cx(\"question-preview\")}\r\n          style={{ backgroundColor: result.points > 0 ? \"green\" : \"red\" }}\r\n        >\r\n          <h1>Result</h1>\r\n          <h3>\r\n            {result.points > 0\r\n                ? \"Correct\"\r\n                : \"Wrong\"\r\n            }\r\n          </h3>\r\n          <h3>\r\n          Points\r\n          {result.points}\r\n          </h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlayerScreen\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}